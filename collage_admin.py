#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.4
#  in conjunction with Tcl version 8.6
#    Dec 17, 2020 12:16:45 PM IST  platform: Windows NT

import sys
import pymongo
from bson import ObjectId
import mysql.connector
from mysql.connector import Error
import tkinter
import tkinter.messagebox as tkMessageBox

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import collage_admin_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    collage_admin_support.set_Tk_var()
    top = Toplevel1 (root)
    collage_admin_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    collage_admin_support.set_Tk_var()
    top = Toplevel1 (w)
    collage_admin_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def existingstudent(self):
        self.st='es'
    def newstudent(self):
        self.st='ns'
    def logoutfun(self):
        quit()
    def submitfun(self):
        st=self.st
        info='valid'
        usn = self.usntb.get('1.0', 'end')
        usn=str.rstrip(usn)
        if(len(usn)!=10):
            tkMessageBox.showerror("Error", " USN length should be 10 characters.")
            info="not valid"
        name = self.nametb.get('1.0', 'end')
        name=str.rstrip(name)
        sem = self.semtb.get('1.0', 'end')
        sem=str.rstrip(sem)
        sem=int(sem)
        dob = self.dobtb.get('1.0', 'end')
        street = self.streettb.get('1.0', 'end')
        street=str.rstrip(street)
        city = self.citytb.get('1.0', 'end')
        city=str.rstrip(city)
        state = self.statetb.get('1.0', 'end')
        state=str.rstrip(state)
        country = self.countrytb.get('1.0', 'end')
        country=str.rstrip(country)
        pincode = self.pincodetb.get('1.0', 'end')
        pincode=str.rstrip(pincode)
        pincode=int(pincode)
        email = self.emailtb.get('1.0', 'end')
        if '@' not in email:
            tkMessageBox.showerror("Error", " Enter correct email address.")
            info="not valid"
        phone = self.phonetb.get('1.0', 'end')
        phone=str.rstrip(phone)
        if(len(phone)!=10):
            tkMessageBox.showerror("Error", " Phone number should be 10 digit long.")
            info="not valid"
        cgpa = self.cgpatb.get('1.0', 'end')
        cgpa=str.rstrip(cgpa)
        dept = self.departmenttb.get('1.0', 'end')
        course1 = self.course1tb.get('1.0', 'end')
        connection = mysql.connector.connect(host='localhost',
                                             database='aef_database',
                                             user='root',
                                             password='toor')
        q="select * from course where course_code='"+course1+"'"
        sql_select_Query=q
        cursor = connection.cursor()
        cursor.execute(sql_select_Query)
        if(cursor.rowcount==0):
            tkMessageBox.showerror("Error", " course with code "+course1+" does not exist.")
            info="not valid"
        course2 = self.course2tb.get('1.0', 'end')
        q="select * from course where course_code='"+course2+"'"
        sql_select_Query=q
        cursor = connection.cursor()
        cursor.execute(sql_select_Query)
        if(cursor.rowcount==0):
            tkMessageBox.showerror("Error", " course with code "+course2+" does not exist.")
            info='not valid'
        course3 = self.course3tb.get('1.0', 'end')
        q="select * from course where course_code='"+course3+"'"
        sql_select_Query=q
        cursor = connection.cursor()
        cursor.execute(sql_select_Query)
        if(cursor.rowcount==0):
            tkMessageBox.showerror("Error", " course with code "+course3+" does not exist.")
            info='not valid'
        course4 = self.course4tb.get('1.0', 'end')
        q="select * from course where course_code='"+course4+"'"
        sql_select_Query=q
        cursor = connection.cursor()
        cursor.execute(sql_select_Query)
        if(cursor.rowcount==0):
            tkMessageBox.showerror("Error", " course with code "+course4+" does not exist.")
            info='not valid'
        course5 = self.course5tb.get('1.0', 'end')
        q="select * from course where course_code='"+course5+"'"
        sql_select_Query=q
        cursor = connection.cursor()
        cursor.execute(sql_select_Query)
        if(cursor.rowcount==0):
            tkMessageBox.showerror("Error", " course with code "+course5+" does not exist.")
            info='not valid'
        course6 = self.course6tb.get('1.0', 'end')
        q="select * from course where course_code='"+course6+"'"
        sql_select_Query=q
        cursor = connection.cursor()
        cursor.execute(sql_select_Query)
        if(cursor.rowcount==0):
            tkMessageBox.showerror("Error", " course with code "+course6+" does not exist.")
            info='not valid'
        elective1 = self.electivec1tb.get('1.0', 'end')
        q="select * from course where course_code='"+elective1+"'"
        sql_select_Query=q
        cursor = connection.cursor()
        cursor.execute(sql_select_Query)
        if(cursor.rowcount==0):
            tkMessageBox.showerror("Error", " course with code "+elective1+" does not exist.")
            info='not valid'
        elective2 = self.electivec2tb.get('1.0', 'end')
        q="select * from course where course_code='"+elective2+"'"
        sql_select_Query=q
        cursor = connection.cursor()
        cursor.execute(sql_select_Query)
        if(cursor.rowcount==0):
            tkMessageBox.showerror("Error", " course with code "+elective2+" does not exist.")
            info='not valid'
        labc1 = self.labc1tb.get('1.0', 'end')
        q="select * from lab_course where lcourse_code='"+labc1+"'"
        sql_select_Query=q
        cursor = connection.cursor()
        cursor.execute(sql_select_Query)
        if(cursor.rowcount==0):
            tkMessageBox.showerror("Error", " course with code "+labc1+" does not exist.")
            info='not valid'
        labc2 = self.labc2tb.get('1.0', 'end')
        q="select * from lab_course where lcourse_code='"+labc2+"'"
        sql_select_Query=q
        cursor = connection.cursor()
        cursor.execute(sql_select_Query)
        if(cursor.rowcount==0):
            tkMessageBox.showerror("Error", " course with code "+labc2+" does not exist.")
            info='not valid'
        labc3 = self.labc3tb.get('1.0', 'end')
        q="select * from lab_course where lcourse_code='"+labc3+"'"
        sql_select_Query=q
        cursor = connection.cursor()
        cursor.execute(sql_select_Query)
        if(cursor.rowcount==0):
            tkMessageBox.showerror("Error", " course with code "+labc3+" does not exist.")
            info='not valid'
        labc4 = self.labc4tb.get('1.0', 'end')
        q="select * from lab_course where lcourse_code='"+labc4+"'"
        sql_select_Query=q
        cursor = connection.cursor()
        cursor.execute(sql_select_Query)
        if(cursor.rowcount==0):
            tkMessageBox.showerror("Error", " course with code "+labc4+" does not exist.")
            info='not valid'
        connection.close()
        cursor.close()
        if(info=='valid'):
            try:
                st=self.st
                if(st=='ns'):
                    connection = mysql.connector.connect(host='localhost',
                                                         database='aef_database',
                                                         user='root',
                                                         password='toor')
                    q="insert into student values('"+usn+"','"+name+"',"+cgpa+","+sem+",'"+street+"','"+city+"','"+state+"','"+country+"',"+pincode+",'"+dept+"')"
                    sql_select_Query=q
                    cursor = connection.cursor()
                    cursor.execute(sql_select_Query)
                    connection.commit()
                    connection.close()
                    cursor.close()
                    connection = mysql.connector.connect(host='localhost',
                                                         database='aef_database',
                                                         user='root',
                                                         password='toor')
                    q="insert into opted values('"+course1+"','"+usn+"')"
                    sql_select_Query=q
                    cursor = connection.cursor()
                    cursor.execute(sql_select_Query)
                    connection.commit()
                    connection.close()
                    cursor.close()
                    connection = mysql.connector.connect(host='localhost',
                                                         database='aef_database',
                                                         user='root',
                                                         password='toor')
                    q="insert into opted values('"+course2+"','"+usn+"')"
                    sql_select_Query=q
                    cursor = connection.cursor()
                    cursor.execute(sql_select_Query)
                    connection.commit()
                    connection.close()
                    cursor.close()
                    connection = mysql.connector.connect(host='localhost',
                                                         database='aef_database',
                                                         user='root',
                                                         password='toor')
                    q="insert into opted values('"+course3+"','"+usn+"')"
                    sql_select_Query=q
                    cursor = connection.cursor()
                    cursor.execute(sql_select_Query)
                    connection.commit()
                    connection.close()
                    cursor.close()
                    connection = mysql.connector.connect(host='localhost',
                                                         database='aef_database',
                                                         user='root',
                                                         password='toor')
                    q="insert into opted values('"+course4+"','"+usn+"')"
                    sql_select_Query=q
                    cursor = connection.cursor()
                    cursor.execute(sql_select_Query)
                    connection.commit()
                    connection.close()
                    cursor.close()
                    connection = mysql.connector.connect(host='localhost',
                                                         database='aef_database',
                                                         user='root',
                                                         password='toor')
                    q="insert into opted values('"+course5+"','"+usn+"')"
                    sql_select_Query=q
                    cursor = connection.cursor()
                    cursor.execute(sql_select_Query)
                    connection.commit()
                    connection.close()
                    cursor.close()
                    connection = mysql.connector.connect(host='localhost',
                                                         database='aef_database',
                                                         user='root',
                                                         password='toor')
                    q="insert into opted values('"+course6+"','"+usn+"')"
                    sql_select_Query=q
                    cursor = connection.cursor()
                    cursor.execute(sql_select_Query)
                    connection.commit()
                    connection.close()
                    cursor.close()
                    connection = mysql.connector.connect(host='localhost',
                                                         database='aef_database',
                                                         user='root',
                                                         password='toor')
                    q="insert into opted values('"+elective1+"','"+usn+"')"
                    sql_select_Query=q
                    cursor = connection.cursor()
                    cursor.execute(sql_select_Query)
                    connection.commit()
                    connection.close()
                    cursor.close()
                    connection = mysql.connector.connect(host='localhost',
                                                         database='aef_database',
                                                         user='root',
                                                         password='toor')
                    q="insert into opted values('"+elective2+"','"+usn+"')"
                    sql_select_Query=q
                    cursor = connection.cursor()
                    cursor.execute(sql_select_Query)
                    connection.commit()
                    connection.close()
                    cursor.close()
                    connection = mysql.connector.connect(host='localhost',
                                                         database='aef_database',
                                                         user='root',
                                                         password='toor')
                    q="insert into taken values('"+labc1+"','"+usn+"')"
                    sql_select_Query=q
                    cursor = connection.cursor()
                    cursor.execute(sql_select_Query)
                    connection.commit()
                    connection.close()
                    cursor.close()
                    connection = mysql.connector.connect(host='localhost',
                                                         database='aef_database',
                                                         user='root',
                                                         password='toor')
                    q="insert into taken values('"+labc2+"','"+usn+"')"
                    sql_select_Query=q
                    cursor = connection.cursor()
                    cursor.execute(sql_select_Query)
                    connection.commit()
                    connection.close()
                    cursor.close()
                    usn=str.rstrip(usn)
                    email=str.rstrip(email)
                    phone=str.rstrip(phone)
                    phone=int(phone)
                    #MongoDB code to insert email and phone number
                    connection=pymongo.MongoClient('localhost', 27017)

                    database = connection['aef_database']

                    collection = database['student_info']
                    data={'USN':usn,'email-id':email, 'ph_no':phone}
                    collection.insert_one(data)
                    tkMessageBox.showerror("Success", "All the information successfully added to database.")
                else:
                    connection = mysql.connector.connect(host='localhost',
                                                         database='aef_database',
                                                         user='root',
                                                         password='toor')
                    q="select * from student where usn='"+usn+"'"
                    sql_select_Query=q
                    cursor = connection.cursor()
                    cursor.execute(sql_select_Query)
                    records = cursor.fetchall()
                    if((cursor.rowcount)>0):
                        connection.close()
                        cursor.close()
                        connection = mysql.connector.connect(host='localhost',
                                                             database='aef_database',
                                                             user='root',
                                                             password='toor')
                        q="update student set name='"+name+"',cgpa="+cgpa+",semester="+sem+",street='"+street+"',city='"+city+"',state='"+state+"',country='"+country+"',pincode="+pincode+",department_dept_name='"+dept+"' where usn='"+usn+"'"
                        sql_select_Query=q
                        cursor = connection.cursor()
                        cursor.execute(sql_select_Query)
                        connection.commit()
                        connection.close()
                        cursor.close()
                        #MongoDB code to update phone number and email id
                        connection=pymongo.MongoClient('localhost', 27017)

                        database = connection['aef_database']

                        collection = database['student_info']
                        collection.update_one({"USN": usn},{"$set": {"email-id":email,"ph_no":phone}});
                        
                        tkMessageBox.showerror("Success", "All the information successfully updated in database.")
                    else:
                        tkMessageBox.showerror("Error", "There exist NO student with given USN.")
            except Exception:
                tkMessageBox.showerror("Error", " Could not connect to MySQL please try later.")

    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("1435x909+226+65")
        top.minsize(148, 1)
        top.maxsize(1924, 1055)
        top.resizable(1, 1)
        top.title("College_Admin")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.var=tk.IntVar()
        self.Frame1 = tk.Frame(top)
        self.Frame1.place(relx=0.014, rely=0.011, relheight=0.95, relwidth=0.968)

        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")
        self.Frame1.configure(background="#ff8080")
        self.Frame1.configure(highlightbackground="#d9d9d9")
        self.Frame1.configure(highlightcolor="black")

        self.Label1 = tk.Label(self.Frame1)
        self.Label1.place(relx=0.365, rely=0.025, height=28, width=304)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#ff80c0")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''WELCOME BACK ! - COLLEGE ADMIN''')

        self.Label2 = tk.Label(self.Frame1)
        self.Label2.place(relx=0.07, rely=0.189, height=30, width=122)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''USN :''')

        self.Label3 = tk.Label(self.Frame1)
        self.Label3.place(relx=0.072, rely=0.255, height=30, width=121)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(activeforeground="black")
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="black")
        self.Label3.configure(text='''NAME :''')

        self.Label4 = tk.Label(self.Frame1)
        self.Label4.place(relx=0.072, rely=0.324, height=28, width=122)
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(activeforeground="black")
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(highlightbackground="#d9d9d9")
        self.Label4.configure(highlightcolor="black")
        self.Label4.configure(text='''SEM :''')

        self.Label5 = tk.Label(self.Frame1)
        self.Label5.place(relx=0.072, rely=0.394, height=28, width=121)
        self.Label5.configure(activebackground="#f9f9f9")
        self.Label5.configure(activeforeground="black")
        self.Label5.configure(background="#d9d9d9")
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(highlightbackground="#d9d9d9")
        self.Label5.configure(highlightcolor="black")
        self.Label5.configure(text='''D.O.B. :''')

        self.Label6 = tk.Label(self.Frame1)
        self.Label6.place(relx=0.072, rely=0.487, height=30, width=121)
        self.Label6.configure(activebackground="#f9f9f9")
        self.Label6.configure(activeforeground="black")
        self.Label6.configure(background="#d9d9d9")
        self.Label6.configure(disabledforeground="#a3a3a3")
        self.Label6.configure(foreground="#000000")
        self.Label6.configure(highlightbackground="#d9d9d9")
        self.Label6.configure(highlightcolor="black")
        self.Label6.configure(text='''ADDRESS :''')

        self.Label7 = tk.Label(self.Frame1)
        self.Label7.place(relx=0.547, rely=0.197, height=31, width=123)
        self.Label7.configure(activebackground="#f9f9f9")
        self.Label7.configure(activeforeground="black")
        self.Label7.configure(background="#d9d9d9")
        self.Label7.configure(disabledforeground="#a3a3a3")
        self.Label7.configure(foreground="#000000")
        self.Label7.configure(highlightbackground="#d9d9d9")
        self.Label7.configure(highlightcolor="black")
        self.Label7.configure(text='''EMAIL :''')

        self.esrb = tk.Radiobutton(self.Frame1)
        self.esrb.place(relx=0.257, rely=0.113, relheight=0.038, relwidth=0.116)
        self.esrb.configure(activebackground="#ececec")
        self.esrb.configure(activeforeground="#000000")
        self.esrb.configure(background="#d9d9d9")
        self.esrb.configure(disabledforeground="#a3a3a3")
        self.esrb.configure(foreground="#000000")
        self.esrb.configure(highlightbackground="#d9d9d9")
        self.esrb.configure(highlightcolor="black")
        self.esrb.configure(justify='left')
        self.esrb.configure(text='''Existing Student''')
        self.esrb.configure(variable=collage_admin_support.selectedButton)
        self.esrb.configure(variable=self.var,value = 1, command = self.existingstudent)

        self.nsrb = tk.Radiobutton(self.Frame1)
        self.nsrb.place(relx=0.599, rely=0.113, relheight=0.038, relwidth=0.104)
        self.nsrb.configure(activebackground="#ececec")
        self.nsrb.configure(activeforeground="#000000")
        self.nsrb.configure(background="#d9d9d9")
        self.nsrb.configure(disabledforeground="#a3a3a3")
        self.nsrb.configure(foreground="#000000")
        self.nsrb.configure(highlightbackground="#d9d9d9")
        self.nsrb.configure(highlightcolor="black")
        self.nsrb.configure(justify='left')
        self.nsrb.configure(text='''New Student''')
        self.nsrb.configure(variable=collage_admin_support.selectedButton)
        self.nsrb.configure(variable=self.var,value = 2, command = self.newstudent)

        self.Label8 = tk.Label(self.Frame1)
        self.Label8.place(relx=0.122, rely=0.556, height=28, width=100)
        self.Label8.configure(activebackground="#f9f9f9")
        self.Label8.configure(activeforeground="black")
        self.Label8.configure(background="#d9d9d9")
        self.Label8.configure(disabledforeground="#a3a3a3")
        self.Label8.configure(foreground="#000000")
        self.Label8.configure(highlightbackground="#d9d9d9")
        self.Label8.configure(highlightcolor="black")
        self.Label8.configure(text='''Street :''')

        self.Label9 = tk.Label(self.Frame1)
        self.Label9.place(relx=0.122, rely=0.637, height=30, width=103)
        self.Label9.configure(activebackground="#f9f9f9")
        self.Label9.configure(activeforeground="black")
        self.Label9.configure(background="#d9d9d9")
        self.Label9.configure(disabledforeground="#a3a3a3")
        self.Label9.configure(foreground="#000000")
        self.Label9.configure(highlightbackground="#d9d9d9")
        self.Label9.configure(highlightcolor="black")
        self.Label9.configure(text='''City :''')

        self.Label10 = tk.Label(self.Frame1)
        self.Label10.place(relx=0.122, rely=0.718, height=31, width=100)
        self.Label10.configure(activebackground="#f9f9f9")
        self.Label10.configure(activeforeground="black")
        self.Label10.configure(background="#d9d9d9")
        self.Label10.configure(disabledforeground="#a3a3a3")
        self.Label10.configure(foreground="#000000")
        self.Label10.configure(highlightbackground="#d9d9d9")
        self.Label10.configure(highlightcolor="black")
        self.Label10.configure(text='''State :''')

        self.usntb = tk.Text(self.Frame1)
        self.usntb.place(relx=0.179, rely=0.189, relheight=0.043, relwidth=0.166)

        self.usntb.configure(background="white")
        self.usntb.configure(font="TkTextFont")
        self.usntb.configure(foreground="black")
        self.usntb.configure(highlightbackground="#d9d9d9")
        self.usntb.configure(highlightcolor="black")
        self.usntb.configure(insertbackground="black")
        self.usntb.configure(selectbackground="blue")
        self.usntb.configure(selectforeground="white")
        self.usntb.configure(wrap="word")

        self.nametb = tk.Text(self.Frame1)
        self.nametb.place(relx=0.18, rely=0.255, relheight=0.043, relwidth=0.166)

        self.nametb.configure(background="white")
        self.nametb.configure(font="TkTextFont")
        self.nametb.configure(foreground="black")
        self.nametb.configure(highlightbackground="#d9d9d9")
        self.nametb.configure(highlightcolor="black")
        self.nametb.configure(insertbackground="black")
        self.nametb.configure(selectbackground="blue")
        self.nametb.configure(selectforeground="white")
        self.nametb.configure(wrap="word")

        self.semtb = tk.Text(self.Frame1)
        self.semtb.place(relx=0.18, rely=0.324, relheight=0.043, relwidth=0.166)
        self.semtb.configure(background="white")
        self.semtb.configure(font="TkTextFont")
        self.semtb.configure(foreground="black")
        self.semtb.configure(highlightbackground="#d9d9d9")
        self.semtb.configure(highlightcolor="black")
        self.semtb.configure(insertbackground="black")
        self.semtb.configure(selectbackground="blue")
        self.semtb.configure(selectforeground="white")
        self.semtb.configure(wrap="word")

        self.dobtb = tk.Text(self.Frame1)
        self.dobtb.place(relx=0.18, rely=0.394, relheight=0.044, relwidth=0.166)
        self.dobtb.configure(background="white")
        self.dobtb.configure(font="TkTextFont")
        self.dobtb.configure(foreground="black")
        self.dobtb.configure(highlightbackground="#d9d9d9")
        self.dobtb.configure(highlightcolor="black")
        self.dobtb.configure(insertbackground="black")
        self.dobtb.configure(selectbackground="blue")
        self.dobtb.configure(selectforeground="white")
        self.dobtb.configure(wrap="word")

        self.streettb = tk.Text(self.Frame1)
        self.streettb.place(relx=0.223, rely=0.556, relheight=0.044
                , relwidth=0.166)
        self.streettb.configure(background="white")
        self.streettb.configure(font="TkTextFont")
        self.streettb.configure(foreground="black")
        self.streettb.configure(highlightbackground="#d9d9d9")
        self.streettb.configure(highlightcolor="black")
        self.streettb.configure(insertbackground="black")
        self.streettb.configure(selectbackground="blue")
        self.streettb.configure(selectforeground="white")
        self.streettb.configure(wrap="word")

        self.citytb = tk.Text(self.Frame1)
        self.citytb.place(relx=0.223, rely=0.637, relheight=0.044
                , relwidth=0.166)
        self.citytb.configure(background="white")
        self.citytb.configure(font="TkTextFont")
        self.citytb.configure(foreground="black")
        self.citytb.configure(highlightbackground="#d9d9d9")
        self.citytb.configure(highlightcolor="black")
        self.citytb.configure(insertbackground="black")
        self.citytb.configure(selectbackground="blue")
        self.citytb.configure(selectforeground="white")
        self.citytb.configure(wrap="word")

        self.statetb = tk.Text(self.Frame1)
        self.statetb.place(relx=0.223, rely=0.718, relheight=0.044
                , relwidth=0.166)
        self.statetb.configure(background="white")
        self.statetb.configure(font="TkTextFont")
        self.statetb.configure(foreground="black")
        self.statetb.configure(highlightbackground="#d9d9d9")
        self.statetb.configure(highlightcolor="black")
        self.statetb.configure(insertbackground="black")
        self.statetb.configure(selectbackground="blue")
        self.statetb.configure(selectforeground="white")
        self.statetb.configure(wrap="word")

        self.emailtb = tk.Text(self.Frame1)
        self.emailtb.place(relx=0.662, rely=0.197, relheight=0.043
                , relwidth=0.248)
        self.emailtb.configure(background="white")
        self.emailtb.configure(font="TkTextFont")
        self.emailtb.configure(foreground="black")
        self.emailtb.configure(highlightbackground="#d9d9d9")
        self.emailtb.configure(highlightcolor="black")
        self.emailtb.configure(insertbackground="black")
        self.emailtb.configure(selectbackground="blue")
        self.emailtb.configure(selectforeground="white")
        self.emailtb.configure(wrap="word")

        self.Label11 = tk.Label(self.Frame1)
        self.Label11.place(relx=0.122, rely=0.869, height=27, width=100)
        self.Label11.configure(activebackground="#f9f9f9")
        self.Label11.configure(activeforeground="black")
        self.Label11.configure(background="#d9d9d9")
        self.Label11.configure(disabledforeground="#a3a3a3")
        self.Label11.configure(foreground="#000000")
        self.Label11.configure(highlightbackground="#d9d9d9")
        self.Label11.configure(highlightcolor="black")
        self.Label11.configure(text='''PINCODE :''')

        self.pincodetb = tk.Text(self.Frame1)
        self.pincodetb.place(relx=0.223, rely=0.881, relheight=0.043
                , relwidth=0.166)
        self.pincodetb.configure(background="white")
        self.pincodetb.configure(font="TkTextFont")
        self.pincodetb.configure(foreground="black")
        self.pincodetb.configure(highlightbackground="#d9d9d9")
        self.pincodetb.configure(highlightcolor="black")
        self.pincodetb.configure(insertbackground="black")
        self.pincodetb.configure(selectbackground="blue")
        self.pincodetb.configure(selectforeground="white")
        self.pincodetb.configure(wrap="word")

        self.phoneno = tk.Label(self.Frame1)
        self.phoneno.place(relx=0.547, rely=0.266, height=27, width=123)
        self.phoneno.configure(activebackground="#f9f9f9")
        self.phoneno.configure(activeforeground="black")
        self.phoneno.configure(background="#d9d9d9")
        self.phoneno.configure(disabledforeground="#a3a3a3")
        self.phoneno.configure(foreground="#000000")
        self.phoneno.configure(highlightbackground="#d9d9d9")
        self.phoneno.configure(highlightcolor="black")
        self.phoneno.configure(text='''PHONE NO. :''')

        self.Label13 = tk.Label(self.Frame1)
        self.Label13.place(relx=0.547, rely=0.336, height=31, width=123)
        self.Label13.configure(activebackground="#f9f9f9")
        self.Label13.configure(activeforeground="black")
        self.Label13.configure(background="#d9d9d9")
        self.Label13.configure(disabledforeground="#a3a3a3")
        self.Label13.configure(foreground="#000000")
        self.Label13.configure(highlightbackground="#d9d9d9")
        self.Label13.configure(highlightcolor="black")
        self.Label13.configure(text='''CGPA :''')

        self.Label14 = tk.Label(self.Frame1)
        self.Label14.place(relx=0.122, rely=0.8, height=28, width=100)
        self.Label14.configure(activebackground="#f9f9f9")
        self.Label14.configure(activeforeground="black")
        self.Label14.configure(background="#d9d9d9")
        self.Label14.configure(disabledforeground="#a3a3a3")
        self.Label14.configure(foreground="#000000")
        self.Label14.configure(highlightbackground="#d9d9d9")
        self.Label14.configure(highlightcolor="black")
        self.Label14.configure(text='''Country :''')

        self.countrytb = tk.Text(self.Frame1)
        self.countrytb.place(relx=0.223, rely=0.8, relheight=0.043
                , relwidth=0.166)
        self.countrytb.configure(background="white")
        self.countrytb.configure(font="TkTextFont")
        self.countrytb.configure(foreground="black")
        self.countrytb.configure(highlightbackground="#d9d9d9")
        self.countrytb.configure(highlightcolor="black")
        self.countrytb.configure(insertbackground="black")
        self.countrytb.configure(selectbackground="blue")
        self.countrytb.configure(selectforeground="white")
        self.countrytb.configure(wrap="word")

        self.phonetb = tk.Text(self.Frame1)
        self.phonetb.place(relx=0.662, rely=0.267, relheight=0.043
                , relwidth=0.251)
        self.phonetb.configure(background="white")
        self.phonetb.configure(font="TkTextFont")
        self.phonetb.configure(foreground="black")
        self.phonetb.configure(highlightbackground="#d9d9d9")
        self.phonetb.configure(highlightcolor="black")
        self.phonetb.configure(insertbackground="black")
        self.phonetb.configure(selectbackground="blue")
        self.phonetb.configure(selectforeground="white")
        self.phonetb.configure(wrap="word")

        self.cgpatb = tk.Text(self.Frame1)
        self.cgpatb.place(relx=0.662, rely=0.336, relheight=0.044
                , relwidth=0.255)
        self.cgpatb.configure(background="white")
        self.cgpatb.configure(font="TkTextFont")
        self.cgpatb.configure(foreground="black")
        self.cgpatb.configure(highlightbackground="#d9d9d9")
        self.cgpatb.configure(highlightcolor="black")
        self.cgpatb.configure(insertbackground="black")
        self.cgpatb.configure(selectbackground="blue")
        self.cgpatb.configure(selectforeground="white")
        self.cgpatb.configure(wrap="word")

        self.Label12 = tk.Label(self.Frame1)
        self.Label12.place(relx=0.547, rely=0.475, height=30, width=121)
        self.Label12.configure(activebackground="#f9f9f9")
        self.Label12.configure(activeforeground="black")
        self.Label12.configure(background="#d9d9d9")
        self.Label12.configure(disabledforeground="#a3a3a3")
        self.Label12.configure(foreground="#000000")
        self.Label12.configure(highlightbackground="#d9d9d9")
        self.Label12.configure(highlightcolor="black")
        self.Label12.configure(text='''COURSES :''')

        self.course1tb = tk.Text(self.Frame1)
        self.course1tb.place(relx=0.655, rely=0.532, relheight=0.043
                , relwidth=0.127)
        self.course1tb.configure(background="white")
        self.course1tb.configure(font="TkTextFont")
        self.course1tb.configure(foreground="black")
        self.course1tb.configure(highlightbackground="#d9d9d9")
        self.course1tb.configure(highlightcolor="black")
        self.course1tb.configure(insertbackground="black")
        self.course1tb.configure(selectbackground="blue")
        self.course1tb.configure(selectforeground="white")
        self.course1tb.configure(wrap="word")

        self.course2tb = tk.Text(self.Frame1)
        self.course2tb.place(relx=0.799, rely=0.532, relheight=0.043
                , relwidth=0.121)
        self.course2tb.configure(background="white")
        self.course2tb.configure(font="TkTextFont")
        self.course2tb.configure(foreground="black")
        self.course2tb.configure(highlightbackground="#d9d9d9")
        self.course2tb.configure(highlightcolor="black")
        self.course2tb.configure(insertbackground="black")
        self.course2tb.configure(selectbackground="blue")
        self.course2tb.configure(selectforeground="white")
        self.course2tb.configure(wrap="word")

        self.Message1 = tk.Message(self.Frame1)
        self.Message1.place(relx=0.655, rely=0.475, relheight=0.038
                , relwidth=0.276)
        self.Message1.configure(background="#80ff00")
        self.Message1.configure(foreground="#000000")
        self.Message1.configure(highlightbackground="#d9d9d9")
        self.Message1.configure(highlightcolor="black")
        self.Message1.configure(text='''( Please enter course code that student taking )''')
        self.Message1.configure(width=356)

        self.course3tb = tk.Text(self.Frame1)
        self.course3tb.place(relx=0.655, rely=0.59, relheight=0.043
                , relwidth=0.127)
        self.course3tb.configure(background="white")
        self.course3tb.configure(font="TkTextFont")
        self.course3tb.configure(foreground="black")
        self.course3tb.configure(highlightbackground="#d9d9d9")
        self.course3tb.configure(highlightcolor="black")
        self.course3tb.configure(insertbackground="black")
        self.course3tb.configure(selectbackground="blue")
        self.course3tb.configure(selectforeground="white")
        self.course3tb.configure(wrap="word")

        self.course4tb = tk.Text(self.Frame1)
        self.course4tb.place(relx=0.799, rely=0.59, relheight=0.043
                , relwidth=0.12)
        self.course4tb.configure(background="white")
        self.course4tb.configure(font="TkTextFont")
        self.course4tb.configure(foreground="black")
        self.course4tb.configure(highlightbackground="#d9d9d9")
        self.course4tb.configure(highlightcolor="black")
        self.course4tb.configure(insertbackground="black")
        self.course4tb.configure(selectbackground="blue")
        self.course4tb.configure(selectforeground="white")
        self.course4tb.configure(wrap="word")

        self.Label15 = tk.Label(self.Frame1)
        self.Label15.place(relx=0.518, rely=0.741, height=30, width=156)
        self.Label15.configure(activebackground="#f9f9f9")
        self.Label15.configure(activeforeground="black")
        self.Label15.configure(background="#d9d9d9")
        self.Label15.configure(disabledforeground="#a3a3a3")
        self.Label15.configure(foreground="#000000")
        self.Label15.configure(highlightbackground="#d9d9d9")
        self.Label15.configure(highlightcolor="black")
        self.Label15.configure(text='''ELECTIVE COURSE :''')

        self.course5tb = tk.Text(self.Frame1)
        self.course5tb.place(relx=0.655, rely=0.66, relheight=0.044
                , relwidth=0.126)
        self.course5tb.configure(background="white")
        self.course5tb.configure(font="TkTextFont")
        self.course5tb.configure(foreground="black")
        self.course5tb.configure(highlightbackground="#d9d9d9")
        self.course5tb.configure(highlightcolor="black")
        self.course5tb.configure(insertbackground="black")
        self.course5tb.configure(selectbackground="blue")
        self.course5tb.configure(selectforeground="white")
        self.course5tb.configure(wrap="word")

        self.course6tb = tk.Text(self.Frame1)
        self.course6tb.place(relx=0.799, rely=0.66, relheight=0.044
                , relwidth=0.12)
        self.course6tb.configure(background="white")
        self.course6tb.configure(font="TkTextFont")
        self.course6tb.configure(foreground="black")
        self.course6tb.configure(highlightbackground="#d9d9d9")
        self.course6tb.configure(highlightcolor="black")
        self.course6tb.configure(insertbackground="black")
        self.course6tb.configure(selectbackground="blue")
        self.course6tb.configure(selectforeground="white")
        self.course6tb.configure(wrap="word")

        self.electivec1tb = tk.Text(self.Frame1)
        self.electivec1tb.place(relx=0.655, rely=0.741, relheight=0.043
                , relwidth=0.128)
        self.electivec1tb.configure(background="white")
        self.electivec1tb.configure(font="TkTextFont")
        self.electivec1tb.configure(foreground="black")
        self.electivec1tb.configure(highlightbackground="#d9d9d9")
        self.electivec1tb.configure(highlightcolor="black")
        self.electivec1tb.configure(insertbackground="black")
        self.electivec1tb.configure(selectbackground="blue")
        self.electivec1tb.configure(selectforeground="white")
        self.electivec1tb.configure(wrap="word")

        self.electivec2tb = tk.Text(self.Frame1)
        self.electivec2tb.place(relx=0.799, rely=0.741, relheight=0.044
                , relwidth=0.12)
        self.electivec2tb.configure(background="white")
        self.electivec2tb.configure(font="TkTextFont")
        self.electivec2tb.configure(foreground="black")
        self.electivec2tb.configure(highlightbackground="#d9d9d9")
        self.electivec2tb.configure(highlightcolor="black")
        self.electivec2tb.configure(insertbackground="black")
        self.electivec2tb.configure(selectbackground="blue")
        self.electivec2tb.configure(selectforeground="white")
        self.electivec2tb.configure(wrap="word")

        self.Label16 = tk.Label(self.Frame1)
        self.Label16.place(relx=0.518, rely=0.833, height=30, width=151)
        self.Label16.configure(activebackground="#f9f9f9")
        self.Label16.configure(activeforeground="black")
        self.Label16.configure(background="#d9d9d9")
        self.Label16.configure(disabledforeground="#a3a3a3")
        self.Label16.configure(foreground="#000000")
        self.Label16.configure(highlightbackground="#d9d9d9")
        self.Label16.configure(highlightcolor="black")
        self.Label16.configure(text='''LAB COURSES :''')

        self.labc1tb = tk.Text(self.Frame1)
        self.labc1tb.place(relx=0.655, rely=0.833, relheight=0.038
                , relwidth=0.125)
        self.labc1tb.configure(background="white")
        self.labc1tb.configure(font="TkTextFont")
        self.labc1tb.configure(foreground="black")
        self.labc1tb.configure(highlightbackground="#d9d9d9")
        self.labc1tb.configure(highlightcolor="black")
        self.labc1tb.configure(insertbackground="black")
        self.labc1tb.configure(selectbackground="blue")
        self.labc1tb.configure(selectforeground="white")
        self.labc1tb.configure(wrap="word")

        self.labc2tb = tk.Text(self.Frame1)
        self.labc2tb.place(relx=0.799, rely=0.833, relheight=0.038
                , relwidth=0.124)
        self.labc2tb.configure(background="white")
        self.labc2tb.configure(font="TkTextFont")
        self.labc2tb.configure(foreground="black")
        self.labc2tb.configure(highlightbackground="#d9d9d9")
        self.labc2tb.configure(highlightcolor="black")
        self.labc2tb.configure(insertbackground="black")
        self.labc2tb.configure(selectbackground="blue")
        self.labc2tb.configure(selectforeground="white")
        self.labc2tb.configure(wrap="word")

        self.labc3tb = tk.Text(self.Frame1)
        self.labc3tb.place(relx=0.655, rely=0.891, relheight=0.039
                , relwidth=0.125)
        self.labc3tb.configure(background="white")
        self.labc3tb.configure(font="TkTextFont")
        self.labc3tb.configure(foreground="black")
        self.labc3tb.configure(highlightbackground="#d9d9d9")
        self.labc3tb.configure(highlightcolor="black")
        self.labc3tb.configure(insertbackground="black")
        self.labc3tb.configure(selectbackground="blue")
        self.labc3tb.configure(selectforeground="white")
        self.labc3tb.configure(wrap="word")

        self.labc4tb = tk.Text(self.Frame1)
        self.labc4tb.place(relx=0.799, rely=0.891, relheight=0.039
                , relwidth=0.125)
        self.labc4tb.configure(background="white")
        self.labc4tb.configure(font="TkTextFont")
        self.labc4tb.configure(foreground="black")
        self.labc4tb.configure(highlightbackground="#d9d9d9")
        self.labc4tb.configure(highlightcolor="black")
        self.labc4tb.configure(insertbackground="black")
        self.labc4tb.configure(selectbackground="blue")
        self.labc4tb.configure(selectforeground="white")
        self.labc4tb.configure(wrap="word")

        self.Label17 = tk.Label(self.Frame1)
        self.Label17.place(relx=0.547, rely=0.405, height=36, width=121)
        self.Label17.configure(activebackground="#f9f9f9")
        self.Label17.configure(activeforeground="black")
        self.Label17.configure(background="#d9d9d9")
        self.Label17.configure(disabledforeground="#a3a3a3")
        self.Label17.configure(foreground="#000000")
        self.Label17.configure(highlightbackground="#d9d9d9")
        self.Label17.configure(highlightcolor="black")
        self.Label17.configure(text='''DEPARTMENT :''')

        self.departmenttb = tk.Text(self.Frame1)
        self.departmenttb.place(relx=0.662, rely=0.405, relheight=0.039
                , relwidth=0.253)
        self.departmenttb.configure(background="white")
        self.departmenttb.configure(font="TkTextFont")
        self.departmenttb.configure(foreground="black")
        self.departmenttb.configure(highlightbackground="#d9d9d9")
        self.departmenttb.configure(highlightcolor="black")
        self.departmenttb.configure(insertbackground="black")
        self.departmenttb.configure(selectbackground="blue")
        self.departmenttb.configure(selectforeground="white")
        self.departmenttb.configure(wrap="word")

        self.submitbtn = tk.Button(self.Frame1)
        self.submitbtn.place(relx=0.418, rely=0.949, height=33, width=146)
        self.submitbtn.configure(activebackground="#ececec")
        self.submitbtn.configure(activeforeground="#000000")
        self.submitbtn.configure(background="#d9d9d9")
        self.submitbtn.configure(disabledforeground="#a3a3a3")
        self.submitbtn.configure(foreground="#000000")
        self.submitbtn.configure(highlightbackground="#d9d9d9")
        self.submitbtn.configure(highlightcolor="black")
        self.submitbtn.configure(pady="0")
        self.submitbtn.configure(command=self.submitfun,text='''SUBMIT''')

        self.logoutbtn = tk.Button(self.Frame1)
        self.logoutbtn.place(relx=0.893, rely=0.023, height=33, width=106)
        self.logoutbtn.configure(activebackground="#ececec")
        self.logoutbtn.configure(activeforeground="#000000")
        self.logoutbtn.configure(background="#d9d9d9")
        self.logoutbtn.configure(disabledforeground="#a3a3a3")
        self.logoutbtn.configure(foreground="#000000")
        self.logoutbtn.configure(highlightbackground="#d9d9d9")
        self.logoutbtn.configure(highlightcolor="black")
        self.logoutbtn.configure(pady="0")
        self.logoutbtn.configure(command=self.logoutfun,text='''LOGOUT''')

if __name__ == '__main__':
    vp_start_gui()

#code to retrieve emailid
usn=str.rstrip(usn)
connection=pymongo.MongoClient('localhost', 27017)
database = connection['aef_database']
collection = database['student_info']

doc1=collection.find({'USN': usn}, {'email-id': 1,'_id':0})
for x in doc1:
    em=x['email-id']
                