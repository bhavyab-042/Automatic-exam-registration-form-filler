#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.4
#  in conjunction with Tcl version 8.6
#    Dec 17, 2020 12:14:37 PM IST  platform: Windows NT

import sys
import pymongo
from bson import ObjectId
try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import bank_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1 (root)
    bank_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    bank_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def updateinfo(self):
        try:
            usn = self.bankusntb.get('1.0', 'end')
            usn=str.rstrip(usn)
            feepaid = self.bankfeetb.get('1.0', 'end')
            feepaid=str.rstrip(feepaid)
            feepaid=int(feepaid)
            payment_id = self.bankpayidtb.get('1.0', 'end')
            payment_id=str.rstrip(payment_id)
            payment_id=int(payment_id)
            #Write mongodb code to insert usn, feepaid, and payment_id
            connection=pymongo.MongoClient('localhost', 27017)

            database = connection['aef_database']

            collection = database['student_info']
            
            collection.update_one({"USN": usn},{"$set": {"Exam_fee": feepaid}});
            collection.update_one({"USN": usn},{"$set": {"Receipt_id": payment_id}});
            
            tkMessageBox.showerror("Success", "Data updated successfully.")
        except Exception:
            tkMessageBox.showerror("Error", " Please enter all the information.")
    def logoutfun(self):
        quit()
        
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("1920x1001+330+118")
        top.minsize(148, 1)
        top.maxsize(1924, 1055)
        top.resizable(1, 1)
        top.title("Bank")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.Frame1 = tk.Frame(top)
        self.Frame1.place(relx=0.041, rely=0.05, relheight=0.889, relwidth=0.906)

        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")
        self.Frame1.configure(background="#d9d9d9")
        self.Frame1.configure(highlightbackground="#d9d9d9")
        self.Frame1.configure(highlightcolor="black")

        self.Label1 = tk.Label(self.Frame1)
        self.Label1.place(relx=0.26, rely=0.057, height=33, width=814)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#0000ff")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''WELCOME BACK ! - BANK MANAGER''')

        self.Label2 = tk.Label(self.Frame1)
        self.Label2.place(relx=0.161, rely=0.255, height=33, width=297)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''ENTER STUDENT USN :''')

        self.Label3 = tk.Label(self.Frame1)
        self.Label3.place(relx=0.233, rely=0.383, height=33, width=157)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(activeforeground="black")
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="black")
        self.Label3.configure(text='''FEE PAID :''')

        self.Label4 = tk.Label(self.Frame1)
        self.Label4.place(relx=0.206, rely=0.511, height=33, width=204)
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(activeforeground="black")
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(highlightbackground="#d9d9d9")
        self.Label4.configure(highlightcolor="black")
        self.Label4.configure(text='''PAYMENT ID:''')

        self.bankusntb = tk.Text(self.Frame1)
        self.bankusntb.place(relx=0.358, rely=0.255, relheight=0.048
                , relwidth=0.289)
        self.bankusntb.configure(background="white")
        self.bankusntb.configure(font="TkTextFont")
        self.bankusntb.configure(foreground="black")
        self.bankusntb.configure(highlightbackground="#d9d9d9")
        self.bankusntb.configure(highlightcolor="black")
        self.bankusntb.configure(insertbackground="black")
        self.bankusntb.configure(selectbackground="blue")
        self.bankusntb.configure(selectforeground="white")
        self.bankusntb.configure(wrap="word")

        self.bankfeetb = tk.Text(self.Frame1)
        self.bankfeetb.place(relx=0.358, rely=0.383, relheight=0.048
                , relwidth=0.127)
        self.bankfeetb.configure(background="white")
        self.bankfeetb.configure(font="TkTextFont")
        self.bankfeetb.configure(foreground="black")
        self.bankfeetb.configure(highlightbackground="#d9d9d9")
        self.bankfeetb.configure(highlightcolor="black")
        self.bankfeetb.configure(insertbackground="black")
        self.bankfeetb.configure(selectbackground="blue")
        self.bankfeetb.configure(selectforeground="white")
        self.bankfeetb.configure(wrap="word")

        self.bankpayidtb = tk.Text(self.Frame1)
        self.bankpayidtb.place(relx=0.358, rely=0.511, relheight=0.048
                , relwidth=0.279)
        self.bankpayidtb.configure(background="white")
        self.bankpayidtb.configure(font="TkTextFont")
        self.bankpayidtb.configure(foreground="black")
        self.bankpayidtb.configure(highlightbackground="#d9d9d9")
        self.bankpayidtb.configure(highlightcolor="black")
        self.bankpayidtb.configure(insertbackground="black")
        self.bankpayidtb.configure(selectbackground="blue")
        self.bankpayidtb.configure(selectforeground="white")
        self.bankpayidtb.configure(wrap="word")

        self.bankupdatebtn = tk.Button(self.Frame1)
        self.bankupdatebtn.place(relx=0.454, rely=0.708, height=43, width=146)
        self.bankupdatebtn.configure(activebackground="#ececec")
        self.bankupdatebtn.configure(activeforeground="#000000")
        self.bankupdatebtn.configure(background="#d9d9d9")
        self.bankupdatebtn.configure(disabledforeground="#a3a3a3")
        self.bankupdatebtn.configure(foreground="#000000")
        self.bankupdatebtn.configure(highlightbackground="#d9d9d9")
        self.bankupdatebtn.configure(highlightcolor="black")
        self.bankupdatebtn.configure(pady="0")
        self.bankupdatebtn.configure(command=self.updateinfo,text='''UPDATE''')

        self.logoutbtn = tk.Button(self.Frame1)
        self.logoutbtn.place(relx=0.869, rely=0.028, height=33, width=96)
        self.logoutbtn.configure(activebackground="#ececec")
        self.logoutbtn.configure(activeforeground="#000000")
        self.logoutbtn.configure(background="#d9d9d9")
        self.logoutbtn.configure(disabledforeground="#a3a3a3")
        self.logoutbtn.configure(foreground="#000000")
        self.logoutbtn.configure(highlightbackground="#d9d9d9")
        self.logoutbtn.configure(highlightcolor="black")
        self.logoutbtn.configure(pady="0")
        self.logoutbtn.configure(command=self.logoutfun,text='''LOGOUT''')

if __name__ == '__main__':
    vp_start_gui()
